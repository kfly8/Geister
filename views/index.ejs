<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="/css/bootstrap.min.css" />
    </head>
    <body>
        <h1>Geister</h1>
        <div>
            <div id="battle-header"></div>
            <div id="battle-board">
                <table>
                <% for (var i = 0; i < 6; i++) { %>
                    <tr>
                    <% for (var j = 0; j < 6; j++) { %>
                    <td
                        style="width:100px;height:100px;background-color:<% if ((i+j)%2) { %>#afeeee<% } else { %>#e0ffff<% } %>"
                        id   = 'masu-i<%= i %>-j<%= j %>'
                        data-i=<%= i %>
                        data-j=<%= j %>
                    >
                    </td>
                    <% } %>
                    </tr>
                <% } %>
                </table>
            </div>
        </div>
        <div id="user-list-wrapper">
            <ul id="user-list"></ul>
            <ul id="user-battle-list"></div>
        </div>

    <script src="/js/uuid.js"></script>
    <script src="/js/json2.js"></script>
    <script src="/js/jquery.min.js"></script>
    <script src="/js/jquery-ui.js"></script>
    <script src="/js/underscore-min.js"></script>
    <script src="/js/backbone.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        _.templateSettings = {
            interpolate: /\{\{(.+?)\}\}/g
        };
        function mk_username() {
            return UUID.generate();
        }

        function get_username() {
            return sessionStorage.getItem('username');
        }

        function set_fighting(data) {

            sessionStorage.setItem('match.username',    data.username);
            sessionStorage.setItem('match.op_username', data.op_username);
        }

        function get_fighting() {
            var username    = sessionStorage.getItem('match.username');
            var op_username = sessionStorage.getItem('match.op_username');
            return { username: username, op_username: op_username };
        }

        function is_fighting(match_data) {
            var match_data = match_data || get_fighting();
            if (!match_data) return;
            return match_data.username === get_username() || match_data.op_username === get_username() ? 1 : 0;
        }

        function draggable_revert($masu) {

            if (confirm('move?')) {
                console.log('move');

                var match = get_fighting();
                console.log(match);
                var data = {
                    username: match.username,
                    op_username: match.op_username,
                    actor: get_username(),
                    koma: this.attr('id'),
                    masu: $masu.attr('id')
                };

                console.log(data);
                socket.emit('move', data);

                return false;
            } else {
                console.log('not move');
                return true;
            }
        }

    </script>
    <script>
    var socket = io.connect(location.origin);
    socket.on('connect', function() {

        var username = get_username();
        if (username) {
            socket.emit('login', { username: username });
        } else {
            username = mk_username();
            sessionStorage.setItem('username', username);
            socket.emit('signin', { username: username });
        }
    });

    socket.on('login_complete', function (data) {
        console.log('login_complete');
        console.log(data);
    });

    socket.on('join', function (data) {
        console.log('join');
        console.log(data);
        var tmpl = _.template($('#tmpl-user-list').text());
        $('#user-list').prepend(tmpl(data));

        $('.start-battle').click(function(e) {
            console.log('start-battle');
            // XXX 対戦中だったら、対戦中の表示をしたいな
            //if (is_fighting()) return;
            var tmp = $(e.currentTarget);
            var op_username  = tmp.attr('data-username');
            var username     = get_username();

            socket.emit('start-battle', { username: username, op_username: op_username });
        });

    });

    socket.on('start-battle-approved', function (data) {
        console.log('start-battle-approved');
        console.log(data);
        var username    = data.username;
        var op_username = data.op_username;

        if (is_fighting(data)) {

            console.log(data);
            set_fighting(data);
            $('#user-list-wrapper').hide();
            console.log('対戦を開始');
            var tmpl = _.template($('#tmpl-battle-info').text());
            $('#battle-header').html(tmpl(data));

            var my_koma_list = _.shuffle([ 'R', 'R', 'R', 'R', 'B', 'B', 'B', 'B' ]);
            var op_koma_list = ['W','W','W','W','W','W','W','W'];

            var my_id_list = [];
            var op_id_list = [];
            if (username === get_username()) { // 挑んだ場合
                for (j = 1; j < 5; j++) {
                    my_id_list.push('masu-i4-j'+j);
                    my_id_list.push('masu-i5-j'+j);

                    op_id_list.push('masu-i0-j'+j);
                    op_id_list.push('masu-i1-j'+j);
                }
            }
            else {
                for (j = 1; j < 5; j++) {
                    my_id_list.push('masu-i0-j'+j);
                    my_id_list.push('masu-i1-j'+j);

                    op_id_list.push('masu-i4-j'+j);
                    op_id_list.push('masu-i5-j'+j);
                }
            }

            var my_masu_data = _.object(my_id_list, my_koma_list);
            var op_masu_data = _.object(op_id_list, op_koma_list);

            var id_list = _.clone(my_id_list).concat(op_id_list);

            var tmpl_koma = _.template($('#tmpl-koma').text());
            for (var idx = 0, l = id_list.length; idx < l; idx++) {

                var masu_id   = id_list[idx];
                var $masu     = $('#'+masu_id);
                var koma_text = my_masu_data[masu_id] || op_masu_data[masu_id];
                var koma_id   = masu_id.replace(/masu/, 'koma');
                var $koma     = $(tmpl_koma({ id: koma_id, text: koma_text }));
                $masu.html($koma);

                if (my_masu_data[masu_id]) { // 自分のコマだったらドラッグ可能

                    $koma.draggable({
                        cursor: '-webkit-grab',
                        revert: draggable_revert
                    });
                }
            }

            $('#battle-board td').droppable({
                tolerance: 'fit'
            });
        } else {
            console.log('その他');
            var tmpl = _.template($('#tmpl-battle-info').text());
            $('#user-battle-list').prepend(tmpl(data));
        }
    });

    socket.on('move', function (data) {

        console.log('moved');

        if (!is_fighting(data)) return;

        var $koma = $('#' + data.koma);
        var $masu = $('#' + data.masu);

        console.log($koma);
        console.log($masu);
        $masu.html($koma);
    });

    </script>
    <script type="text/template" id="tmpl-user-list">
        <li>
          join:{{ username }}<br />
          <button class="start-battle" data-username="{{ username }}">対戦する</button>
        </li>
    </script>
    <script type="text/template" id="tmpl-battle-info">
       対戦開始:{{ username }} vs {{ op_username }}
    </script>

    <script type="text/template" id="tmpl-koma">
        <span
            id   = "{{ id }}"
            style="cursor:-webkit-grab;font-size:20px;color:{{ text === 'W' ? '#696969' : text === 'R' ? '#ff4500' : text === 'B' ? '#0000cd' : '' }};">
          {{ text }}
        </span>
    </script>

    </body>
</html>

